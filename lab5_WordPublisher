package com.example.week5;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
@RestController
public class WordPublisher {
    protected Word words = new Word();
    @RequestMapping(value = "/addBad/{s}", method = RequestMethod.GET)
    public ArrayList<String> addBadWord(@PathVariable String s){
        words.badWords.add(s);
        return words.badWords;
    }
    @RequestMapping(value = "/delBad/{s}", method = RequestMethod.GET)
    public ArrayList<String> deleteBadWord(@PathVariable String s){
        words.badWords.remove(s);
        return words.badWords;
    }
    @RequestMapping(value = "/addGood/{s}", method = RequestMethod.GET)
    public ArrayList<String> addGoodWord(@PathVariable String s){
        words.goodWords.add(s);
        return words.goodWords;
    }
    @RequestMapping(value = "/delGood/{s}", method = RequestMethod.GET)
    public ArrayList<String> deleteGoodWord(@PathVariable String s){
        words.goodWords.remove(s);
        return words.goodWords;
    }
    @RequestMapping(value = "/proof/{s}", method = RequestMethod.GET)
    public String proofSentence(@PathVariable String s){
        int bad = 0;
        int good = 0;
        for (String word:words.badWords) {
            if(s.contains(word)){
                bad = 1;
            }
        }
        for (String word:words.goodWords) {
            if(s.contains(word)){
                good = 1;
            }
        }

    }
}
