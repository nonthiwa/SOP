import com.example.lab6v2.pojo.Wizard;
import com.example.lab6v2.pojo.Wizards;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.vaadin.flow.component.combobox.ComboBox;
import com.vaadin.flow.component.html.Span;
import com.vaadin.flow.component.notification.Notification;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.radiobutton.RadioButtonGroup;
import com.vaadin.flow.component.textfield.NumberField;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.router.Route;
import org.springframework.http.MediaType;
import org.springframework.util.LinkedMultiValueMap;
import org.springframework.util.MultiValueMap;
import org.springframework.web.reactive.function.BodyInserters;
import org.springframework.web.reactive.function.client.WebClient;
import com.fasterxml.jackson.core.type.TypeReference;

import java.awt.*;
import java.util.ArrayList;
import java.util.List;

import static com.vaadin.flow.component.ComponentUtil.getData;

@Route(value="/mainPage.it")
public class MainWizardView extends VerticalLayout {
    private TextField fullName;
    private NumberField dollars;
    private RadioButtonGroup<String> gender;
    private ComboBox<String> position,school,house;
    private Button left,create,update,delete,right;
    private HorizontalLayout buttonGroup;
    private Wizards wizards = new Wizards();
    private Wizard currentWizard;
    private int index = 0;

    public MainWizardView(){
        wizards.model = getData();
        currentWizard = wizards.model.get(index);
        fullName = new TextField();
        fullName.setPlaceholder("Full Name");

        gender = new RadioButtonGroup<>("Gender");
        gender.setItems("Male","Female");

        position = new ComboBox<>();
        position.setPlaceholder("Position");
        position.setItems("Student", "Teacher");

        dollars = new NumberField("Dollars");
        dollars.setPrefixComponent(new Span("$"));

        school = new ComboBox<>();
        school.setPlaceholder("School");
        school.setItems("Hogwarts","Beauxbatons","Durmstrang");

        house = new ComboBox<>();
        house.setPlaceholder("School");
        house.setItems("Gryffindor","Ravenclaw","Hufflepuf"," Slyther");

        setPage(index);

        left = new Button("<<");
        create = new Button("Create");
        update = new Button("Update");
        delete = new Button("Delete");
        right = new Button(">>");
        buttonGroup = new HorizontalLayout(left, create, update, delete, right);

        add(fullName,gender,position,dollars,school,house,buttonGroup);

        left.addClickListener(event -> {
            if (index <= 0) index = 0;
            else {
                setPage(--index);
                System.out.println("page: " + (index+1) + "/" + wizards.model.size());
            }
        });
        right.addClickListener(event -> {
            if (index >= wizards.model.size() - 1) index = wizards.model.size() - 1;
            else {
                setPage(++index);
                System.out.println("page: " + (index+1) + "/" + wizards.model.size());
            }
        });

        create.addClickListener(event -> {
            MultiValueMap<String, String> formData = new LinkedMultiValueMap<>();
            formData.add("name", fullName.getValue());
            if (gender.getValue().equals("Male")) formData.add("sex", "m");
            else if (gender.getValue().equals("Female")) formData.add("sex", "f");
            formData.add("position", position.getValue().toLowerCase());
            formData.add("money", String.valueOf(dollars.getValue()));
            formData.add("school", school.getValue());
            formData.add("house", house.getValue());

            String out = WebClient.create()
                    .post()
                    .uri("http://localhost:8080/addWizard")
                    .contentType(MediaType.APPLICATION_FORM_URLENCODED)
                    .body(BodyInserters.fromFormData(formData))
                    .retrieve().bodyToMono(String.class).block();
            if (out != null){System.out.println("Create Succeed");}
        });
        update.addClickListener(event -> {
            MultiValueMap<String, String> formData = new LinkedMultiValueMap<>();
            formData.add("nameOld", currentWizard.getName());
            formData.add("nameNew", fullName.getValue());
            if (gender.getValue().equals("Male")) formData.add("sex", "m");
            else if (gender.getValue().equals("Female")) formData.add("sex", "f");
            formData.add("position", position.getValue().toLowerCase());
            formData.add("money", String.valueOf(dollars.getValue()));
            formData.add("school", school.getValue());
            formData.add("house", house.getValue());

            String out = WebClient.create()
                    .post()
                    .uri("http://localhost:8080/updateWizard")
                    .contentType(MediaType.APPLICATION_FORM_URLENCODED)
                    .body(BodyInserters.fromFormData(formData))
                    .retrieve().bodyToMono(String.class).block();
            if (out != null){System.out.println("Update Succeed");}

        });
        delete.addClickListener(event -> {
            MultiValueMap<String, String> formData = new LinkedMultiValueMap<>();
            formData.add("name", fullName.getValue());

            String out = WebClient.create()
                    .post()
                    .uri("http://localhost:8080/deleteWizard")
                    .contentType(MediaType.APPLICATION_FORM_URLENCODED)
                    .body(BodyInserters.fromFormData(formData))
                    .retrieve().bodyToMono(String.class).block();
            if (out != null){System.out.println("Delete Succeed");}
        });
    }
    public ArrayList getData() {
        ArrayList out = WebClient.create().get()
                .uri("http://localhost:8080/wizards")
                .retrieve().bodyToMono(ArrayList.class).block();

        System.out.println(out);

        ArrayList wizards = new ObjectMapper().convertValue(
                out, new TypeReference<ArrayList<Wizard>>() {}
        );
        return wizards;
    }
    public void setPage(int index) {
        currentWizard = wizards.model.get(index);
        fullName.setValue(currentWizard.getName());
        if (currentWizard.getSex().equals("m")) gender.setValue("Male");
        else if (currentWizard.getSex().equals("f")) gender.setValue("Female");
        if (currentWizard.getPosition().equals("teacher")) position.setValue("Teacher");
        else if (currentWizard.getPosition().equals("student")) position.setValue("Student");
        dollars.setValue(currentWizard.getMoney());
        school.setValue(currentWizard.getSchool());
        house.setValue(currentWizard.getHouse());
    }
}
